{"version":3,"file":"static/js/881.76d192f3.chunk.js","mappings":"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","sources":["hooks/useTmdb.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const BASE_URL = 'https://api.themoviedb.org';\nexport const AUTH_KEY = process.env.REACT_APP_AUTH_KEY;\n\nexport const useTmdb = () => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${AUTH_KEY}`,\n    },\n  };\n\n  const getTrending = async () => {\n    try {\n      const response = await fetch(\n        `${BASE_URL}/3/trending/movie/day?language=en-US`,\n        options\n      );\n      const parsed = await response.json();\n      const trendingToday = parsed.results.map(result => ({\n        id: result.id,\n        title: result.title,\n      }));\n      return [...trendingToday];\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getDetails = async id => {\n    try {\n      const response = await fetch(\n        `${BASE_URL}/3/movie/${id}?language=en-US`,\n        options\n      );\n      const parsed = await response.json();\n      const genresMapped = parsed.genres.map(genre => genre.name);\n      const details = {\n        title: parsed.title,\n        release_year: parsed.release_date.slice(0, 4),\n        poster: parsed.poster_path\n          ? 'https://image.tmdb.org/t/p/w342/' + parsed.poster_path\n          : 'https://placehold.co/342x513',\n        score: parsed.vote_average !== 0 ? parsed.vote_average : 'No score yet',\n        overview: parsed.overview,\n        genres: genresMapped,\n      };\n      return details;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getCast = async id => {\n    try {\n      const response = await fetch(\n        `${BASE_URL}/3/movie/${id}/credits?language=en-US`,\n        options\n      );\n      const parsed = await response.json();\n      const cast = parsed.cast.map(actor => ({\n        id: actor.id,\n        name: actor.name,\n        character: actor.character,\n        photo: actor.profile_path\n          ? 'https://image.tmdb.org/t/p/w185' + actor.profile_path\n          : 'https://placehold.co/185x278',\n      }));\n      return [...cast];\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getReviews = async id => {\n    try {\n      const response = await fetch(\n        `${BASE_URL}/3/movie/${id}/reviews?language=en-US&page=1}`,\n        options\n      );\n      const parsed = await response.json();\n      const reviews = parsed.results.map(result => ({\n        id: result.id,\n        author: result.author,\n        content: result.content,\n        url: result.url,\n      }));\n\n      return [...reviews];\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getSearch = async (query, page) => {\n    try {\n      const response = await fetch(\n        `${BASE_URL}/3/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`,\n        options\n      );\n      const parsed = await response.json();\n      const pageCount = parsed.total_pages;\n      const results = parsed.results.map(result => ({\n        id: result.id,\n        title: result.title,\n        release_year: result.release_date.slice(0, 4),\n      }));\n      return { results, pageCount };\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return { getTrending, getDetails, getCast, getReviews, getSearch };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesContainer\":\"Movies_moviesContainer__RXtJy\",\"moviesList\":\"Movies_moviesList__lstJL\",\"moviesItem\":\"Movies_moviesItem__2Ne0E\"};","import { useTmdb } from 'hooks/useTmdb';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { lazy } from 'react';\nimport { useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport css from './Movies.module.css';\n\nconst Searchbar = lazy(() => import('components/Searchbar/Searchbar'));\nconst Pagination = lazy(() => import('components/Pagination/Pagination'));\n\nexport default function Movies() {\n  const [pageCount, setPageCount] = useState(0);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [search, setSearch] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { getSearch } = useTmdb();\n\n  const fillSearch = async (query, page) => {\n    const results = await getSearch(query, page);\n    setPageCount(results.pageCount);\n    setSearch(results.results);\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) {\n      setPageCount(0);\n      setCurrentPage(0);\n      setSearch([]);\n      return;\n    }\n    const page = searchParams.get('page');\n    const currPage = page ? Number(page) : 1;\n    setCurrentPage(currPage);\n    fillSearch(query, currPage);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams]);\n\n  const handleSearch = e => {\n    e.preventDefault();\n    const query = e.currentTarget.elements.search.value;\n    setSearchParams({ query, page: 1 });\n    setCurrentPage(1);\n    fillSearch(query, 1);\n  };\n\n  const nextPage = () => {\n    const query = searchParams.get('query');\n    const newPage = currentPage + 1;\n    setCurrentPage(newPage);\n    fillSearch(query, newPage);\n    setSearchParams({ query, page: newPage });\n  };\n\n  const previousPage = () => {\n    const query = searchParams.get('query');\n    const newPage = currentPage - 1;\n    setCurrentPage(newPage);\n    fillSearch(query, newPage);\n    setSearchParams({ query, page: newPage });\n  };\n\n  return (\n    <div className={css.moviesContainer}>\n      <Searchbar handleSearch={handleSearch} />\n      <ul className={css.moviesList}>\n        {search &&\n          search.map(result => {\n            const movieLink = `/movies/${result.id}`;\n            return (\n              <li key={result.id} className={css.moviesItem}>\n                <Link\n                  to={movieLink}\n                  state={{\n                    from: `/movies/?query=${searchParams.get(\n                      'query'\n                    )}&page=${currentPage}`,\n                  }}\n                >\n                  {result.title} ({result.release_year})\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n      {pageCount > 1 && (\n        <Pagination\n          page={currentPage}\n          pageCount={pageCount}\n          handleNext={nextPage}\n          handlePrev={previousPage}\n        />\n      )}\n    </div>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["BASE_URL","useTmdb","options","method","headers","accept","Authorization","concat","process","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","parsed","trendingToday","_context","prev","next","fetch","sent","json","results","map","result","id","title","abrupt","_toConsumableArray","t0","console","log","stop","apply","arguments","getDetails","_ref2","_callee2","genresMapped","details","_context2","genres","genre","name","release_year","release_date","slice","poster","poster_path","score","vote_average","overview","_x","getCast","_ref3","_callee3","cast","_context3","actor","character","photo","profile_path","_x2","getReviews","_ref4","_callee4","reviews","_context4","author","content","url","_x3","getSearch","_ref5","_callee5","query","page","pageCount","_context5","total_pages","_x4","_x5","Searchbar","lazy","Pagination","Movies","_useState","useState","_useState2","_slicedToArray","setPageCount","_useState3","_useState4","currentPage","setCurrentPage","_useState5","_useState6","search","setSearch","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","fillSearch","useEffect","get","currPage","Number","_jsxs","className","css","children","_jsx","handleSearch","e","preventDefault","currentTarget","elements","value","movieLink","Link","to","state","from","handleNext","newPage","handlePrev","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}